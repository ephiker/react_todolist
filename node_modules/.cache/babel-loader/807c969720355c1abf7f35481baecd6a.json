{"ast":null,"code":"var _jsxFileName = \"/Users/andre/Desktop/git/practice03/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport List from './List.js';\nimport Item from './Item.js';\n\nclass App extends Component {\n  // state와 하위 변수 생성\n  constructor(props) {\n    super(props);\n\n    this.Post = e => {\n      let tempArr = this.state.itemArr;\n      let temp_string = this._inputElement.value;\n      tempArr.push({\n        key: Date.now(),\n        text: temp_string\n      }); //비워주기\n\n      this._inputElement.value = \"\";\n      this.setState({\n        itemArr: tempArr\n      });\n      e.preventDefault();\n      console.log(\"Arr::\" + this.state.itemArr);\n    };\n\n    this.state = {\n      itemArr: []\n    };\n  }\n\n  render() {\n    //렌더 써주기 \n    let literal = \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      entries: this.state.itemArr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"To Do List\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: a => this._inputElement = a,\n      placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.Post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \" \\uCD94\\uAC00\\uC694~ \"));\n  } // Rearrange = function () {\n  //   let literal = \"\";\n  //   {\n  //     this.state.itemArr.map((item, idx) => {\n  //       literal += this.setLiteral(item, idx);\n  //     })\n  //   }\n  //   document.getElementById(\"DV_List\").innerHTML = literal;\n  // }\n  // Rearrange = function () {\n  //   render:\n  //   {\n  //     return (\n  //       <div>\n  //         Rearrange\n  //       </div>\n  //     )\n  //   }\n  // }\n  // setLiteral = function (param, idx) {\n  //   return `\n  //   <div id=\"DV_Thing\" data-idx=\"${idx}\">\n  //   <button id=\"BT_Thing\" data-idx=\"${idx}\" class=\"textField\" onclick=\"Edit(${idx})\">${param}</button>\n  //   <button id=\"BT_Delete\" data-idx=\"${idx}\" onClick={this.Delete(${idx})}>DELETE</button>\n  //   <button onClick=${this.Delete()}> 삭제요~ </button>\n  //   </div>\n  //   `\n  // }\n  // Delete = function (targetIdx) {\n  //   console.log(\"Delete\");\n  //   this.state.itemArr.splice(targetIdx, 1);\n  //   this.Rearrange();\n  // }\n  // inputUpdate = temp => {\n  // this.setState({ content: temp.target.value })\n  // }\n  // render() { //렌더 써주기 \n  //   let literal = \"\";\n  // this.state.itemArr.map((item, idx) => { literal += this.setLiteral(item, idx); });\n  // var bt = this.state.itemArr.map((item) => (\n  // <button value={item} />\n  // <div id=\"DV_Thing\" />\n  // <div id=\"DV_Thing\" data-idx={item} />\n  // {/* <button id=\"BT_Thing\" data-idx=\"${idx}\" class=\"textField\" onclick=\"Edit(${idx})\">${param}</button>\n  // <button id=\"BT_Delete\" data-idx=\"${idx}\" onClick={this.Delete(${ idx })}>DELETE</button>\n  // <button onClick=${this.Delete()}> 삭제요~ </button> */}\n  // ));\n  // const { data } = this.props;\n  // const list = data.map(\n  //   info => (<PhoneInfo key={info.id} info={info} />)\n  // );\n  //   return (\n  //     <div className=\"main\" >\n  //       <p>To Do List</p>\n  //       <input ref={(a) => this._inputElement = a} placeholder=\"할 일을 입력하세요\" />\n  //       <button onClick={this.Post}> 추가요~ </button>\n  //       {/* {JSON.stringify(this.state.itemArr)} */}\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andre/Desktop/git/practice03/src/App.js"],"names":["React","Component","List","Item","App","constructor","props","Post","e","tempArr","state","itemArr","temp_string","_inputElement","value","push","key","Date","now","text","setState","preventDefault","console","log","render","literal","a"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE1B;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,IARmB,GAQXC,CAAD,IAAO;AACZ,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWC,OAAzB;AACA,UAAIC,WAAW,GAAG,KAAKC,aAAL,CAAmBC,KAArC;AAEAL,MAAAA,OAAO,CAACM,IAAR,CACE;AACEC,QAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL,EADP;AAEEC,QAAAA,IAAI,EAAEP;AAFR,OADF,EAJY,CAWZ;;AACA,WAAKC,aAAL,CAAmBC,KAAnB,GAA2B,EAA3B;AACA,WAAKM,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAEF;AAAX,OAAd;AAEAD,MAAAA,CAAC,CAACa,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAU,KAAKb,KAAL,CAAWC,OAAjC;AAED,KA1BkB;;AAEjB,SAAKD,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAuBDa,EAAAA,MAAM,GAAG;AAAE;AACT,QAAIC,OAAO,GAAG,EAAd;AACA,wBAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKf,KAAL,CAAWC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAO,MAAA,GAAG,EAAGe,CAAD,IAAO,KAAKb,aAAL,GAAqBa,CAAxC;AAA2C,MAAA,WAAW,EAAC,oDAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME;AAAQ,MAAA,OAAO,EAAE,KAAKnB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BANF,CAFF;AAWD,GA5CyB,CA+C1B;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA9H0B;;AAkI5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport List from './List.js';\nimport Item from './Item.js';\n\nclass App extends Component {\n\n  // state와 하위 변수 생성\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemArr: []\n    }\n  }\n\n\n  Post = (e) => {\n    let tempArr = this.state.itemArr;\n    let temp_string = this._inputElement.value;\n\n    tempArr.push(\n      {\n        key: Date.now(),\n        text: temp_string\n      }\n    );\n\n    //비워주기\n    this._inputElement.value = \"\";\n    this.setState({ itemArr: tempArr });\n\n    e.preventDefault();\n    console.log(\"Arr::\" + this.state.itemArr);\n\n  }\n\n  render() { //렌더 써주기 \n    let literal = \"\";\n    return (\n\n      <div className=\"main\" >\n        {/* 자식 컴퍼넌트에게 상속하기 */}\n        <List entries={this.state.itemArr} />\n\n        <p>To Do List</p>\n        <input ref={(a) => this._inputElement = a} placeholder=\"할 일을 입력하세요\" />\n        <button onClick={this.Post}> 추가요~ </button>\n      </div>\n    )\n  }\n\n\n  // Rearrange = function () {\n  //   let literal = \"\";\n\n  //   {\n  //     this.state.itemArr.map((item, idx) => {\n  //       literal += this.setLiteral(item, idx);\n  //     })\n  //   }\n\n  //   document.getElementById(\"DV_List\").innerHTML = literal;\n  // }\n\n  // Rearrange = function () {\n  //   render:\n  //   {\n  //     return (\n  //       <div>\n  //         Rearrange\n  //       </div>\n  //     )\n  //   }\n  // }\n\n\n\n\n  // setLiteral = function (param, idx) {\n  //   return `\n  //   <div id=\"DV_Thing\" data-idx=\"${idx}\">\n  //   <button id=\"BT_Thing\" data-idx=\"${idx}\" class=\"textField\" onclick=\"Edit(${idx})\">${param}</button>\n  //   <button id=\"BT_Delete\" data-idx=\"${idx}\" onClick={this.Delete(${idx})}>DELETE</button>\n  //   <button onClick=${this.Delete()}> 삭제요~ </button>\n  //   </div>\n  //   `\n  // }\n\n  // Delete = function (targetIdx) {\n  //   console.log(\"Delete\");\n  //   this.state.itemArr.splice(targetIdx, 1);\n  //   this.Rearrange();\n  // }\n\n  // inputUpdate = temp => {\n  // this.setState({ content: temp.target.value })\n  // }\n\n  // render() { //렌더 써주기 \n  //   let literal = \"\";\n  // this.state.itemArr.map((item, idx) => { literal += this.setLiteral(item, idx); });\n  // var bt = this.state.itemArr.map((item) => (\n  // <button value={item} />\n\n  // <div id=\"DV_Thing\" />\n  // <div id=\"DV_Thing\" data-idx={item} />\n  // {/* <button id=\"BT_Thing\" data-idx=\"${idx}\" class=\"textField\" onclick=\"Edit(${idx})\">${param}</button>\n  // <button id=\"BT_Delete\" data-idx=\"${idx}\" onClick={this.Delete(${ idx })}>DELETE</button>\n  // <button onClick=${this.Delete()}> 삭제요~ </button> */}\n\n\n\n\n  // ));\n  // const { data } = this.props;\n  // const list = data.map(\n  //   info => (<PhoneInfo key={info.id} info={info} />)\n  // );\n\n\n\n\n\n  //   return (\n  //     <div className=\"main\" >\n  //       <p>To Do List</p>\n  //       <input ref={(a) => this._inputElement = a} placeholder=\"할 일을 입력하세요\" />\n  //       <button onClick={this.Post}> 추가요~ </button>\n  //       {/* {JSON.stringify(this.state.itemArr)} */}\n  //     </div>\n  //   )\n  // }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}