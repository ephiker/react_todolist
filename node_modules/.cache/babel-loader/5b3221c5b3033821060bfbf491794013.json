{"ast":null,"code":"var _jsxFileName = \"/Users/andre/Desktop/git/practice03/src/List.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Item from './Item.js';\n\nclass List extends Component {\n  // const newArr2 = arr.filter(num => num !== 3);\n  // Delete = function () {\n  //     console.log(\"delete!!\");\n  // }\n  // Delete = () => {\n  //     console.log(\"delete!!\");\n  //목록에서 지워주면 알아서 그려진다(?)\n  // let tempArr = this.state.itemArr;\n  // tempArr.map((item) => {\n  //     if (item.key == _key) {\n  //         tempArr.remove(item);\n  //     }\n  // })\n  // this.setState({ itemArr: tempArr });\n  // }\n  render() {\n    function Delete() {\n      console.log(\"delete!!\");\n      let tempArr = this.state.itemArr;\n      tempArr.map(item => {\n        if (item.key == _key) {\n          tempArr.remove(item);\n        }\n      });\n    } //리턴 형식, key가 필요함\n\n\n    function generateLine(item) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.key,\n        id: \"DV_Thing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        key: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, item.text), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: Delete(key),\n        key: item.key + 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, \"\\uC0AD\\uC81C\"));\n    } // onClick={this.Delete}\n    //부모 컴퍼넌트로부터 받은 배열을 mapping\n\n\n    var listItems = this.props.entries.map(generateLine); //ToDoList라는 최상위 div 아래에 리턴\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ToDoList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, listItems);\n  }\n\n}\n\nList.defaultProps = {\n  content: \"\",\n  itemArr: []\n};\nexport default List;","map":{"version":3,"sources":["/Users/andre/Desktop/git/practice03/src/List.js"],"names":["React","Component","Item","List","render","Delete","console","log","tempArr","state","itemArr","map","item","key","_key","remove","generateLine","text","listItems","props","entries","defaultProps","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAOzB;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGAG,EAAAA,MAAM,GAAG;AAEL,aAASC,MAAT,GAAkB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWC,OAAzB;AAEAF,MAAAA,OAAO,CAACG,GAAR,CAAaC,IAAD,IAAU;AAClB,YAAIA,IAAI,CAACC,GAAL,IAAYC,IAAhB,EAAsB;AAClBN,UAAAA,OAAO,CAACO,MAAR,CAAeH,IAAf;AACH;AACJ,OAJD;AAKH,KAXI,CAaL;;;AACA,aAASI,YAAT,CAAsBJ,IAAtB,EAA4B;AACxB,0BAAO;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,QAAA,EAAE,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH;AAAQ,QAAA,GAAG,EAAED,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBD,IAAI,CAACK,IAA7B,CADG,eAEH;AAAQ,QAAA,OAAO,EAAEZ,MAAM,CAACQ,GAAD,CAAvB;AAA8B,QAAA,GAAG,EAAED,IAAI,CAACC,GAAL,GAAW,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFG,CAAP;AAIH,KAnBI,CAoBL;AAEA;;;AACA,QAAIK,SAAS,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBT,GAAnB,CAAuBK,YAAvB,CAAhB,CAvBK,CAyBL;;AACA,wBACI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,SADL,CADJ;AAKH;;AA5DwB;;AAAvBf,I,CAEKkB,Y,GAAe;AAClBC,EAAAA,OAAO,EAAE,EADS;AAElBZ,EAAAA,OAAO,EAAE;AAFS,C;AA6D1B,eAAeP,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Item from './Item.js';\n\n\nclass List extends Component {\n\n    static defaultProps = {\n        content: \"\",\n        itemArr: []\n    }\n\n    // const newArr2 = arr.filter(num => num !== 3);\n\n\n    // Delete = function () {\n    //     console.log(\"delete!!\");\n    // }\n\n    // Delete = () => {\n    //     console.log(\"delete!!\");\n    //목록에서 지워주면 알아서 그려진다(?)\n    // let tempArr = this.state.itemArr;\n\n    // tempArr.map((item) => {\n    //     if (item.key == _key) {\n    //         tempArr.remove(item);\n    //     }\n    // })\n\n    // this.setState({ itemArr: tempArr });\n    // }\n\n\n    render() {\n\n        function Delete() {\n            console.log(\"delete!!\");\n            let tempArr = this.state.itemArr;\n\n            tempArr.map((item) => {\n                if (item.key == _key) {\n                    tempArr.remove(item);\n                }\n            })\n        }\n\n        //리턴 형식, key가 필요함\n        function generateLine(item) {\n            return <div key={item.key} id=\"DV_Thing\">\n                <button key={item.key}>{item.text}</button>\n                <button onClick={Delete(key)} key={item.key + 1}>삭제</button>\n            </div >\n        }\n        // onClick={this.Delete}\n\n        //부모 컴퍼넌트로부터 받은 배열을 mapping\n        var listItems = this.props.entries.map(generateLine);\n\n        //ToDoList라는 최상위 div 아래에 리턴\n        return (\n            <div id=\"ToDoList\">\n                {listItems}\n            </div>\n        )\n    }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}