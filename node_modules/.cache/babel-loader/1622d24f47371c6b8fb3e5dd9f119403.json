{"ast":null,"code":"var _jsxFileName = \"/Users/andre/Desktop/git/react_todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport List from './List.js';\n\nclass App extends Component {\n  // state와 하위 변수 생성\n  constructor(props) {\n    super(props);\n\n    this.Post = e => {\n      let temp_string = this._inputElement.value;\n\n      if (temp_string != \"\") {\n        let tempArr = this.state.itemArr;\n        tempArr.push({\n          key: Date.now(),\n          text: temp_string\n        }); //비워주기\n\n        this._inputElement.value = \"\";\n        this.setState({\n          itemArr: tempArr\n        });\n        e.preventDefault();\n        console.log(\"Arr::\" + this.state.itemArr);\n      }\n    };\n\n    this.state = {\n      itemArr: []\n    };\n  }\n\n  render() {\n    //렌더 써주기 \n    let literal = \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"To Do List\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: a => this._inputElement = a,\n      placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.Post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \" \\uCD94\\uAC00\\uC694~ \"), /*#__PURE__*/React.createElement(List, {\n      entries: this.state.itemArr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App; // Rearrange = function () {\n//   let literal = \"\";\n//   {\n//     this.state.itemArr.map((item, idx) => {\n//       literal += this.setLiteral(item, idx);\n//     })\n//   }\n//   document.getElementById(\"DV_List\").innerHTML = literal;\n// }\n// Rearrange = function () {\n//   render:\n//   {\n//     return (\n//       <div>\n//         Rearrange\n//       </div>\n//     )\n//   }\n// }\n// setLiteral = function (param, idx) {\n//   return `\n//   <div id=\"DV_Thing\" data-idx=\"${idx}\">\n//   <button id=\"BT_Thing\" data-idx=\"${idx}\" class=\"textField\" onclick=\"Edit(${idx})\">${param}</button>\n//   <button id=\"BT_Delete\" data-idx=\"${idx}\" onClick={this.Delete(${idx})}>DELETE</button>\n//   <button onClick=${this.Delete()}> 삭제요~ </button>\n//   </div>\n//   `\n// }\n// Delete = function (targetIdx) {\n//   console.log(\"Delete\");\n//   this.state.itemArr.splice(targetIdx, 1);\n//   this.Rearrange();\n// }\n// inputUpdate = temp => {\n// this.setState({ content: temp.target.value })\n// }\n// render() { //렌더 써주기 \n//   let literal = \"\";\n// this.state.itemArr.map((item, idx) => { literal += this.setLiteral(item, idx); });\n// var bt = this.state.itemArr.map((item) => (\n// <button value={item} />\n// <div id=\"DV_Thing\" />\n// <div id=\"DV_Thing\" data-idx={item} />\n// {/* <button id=\"BT_Thing\" data-idx=\"${idx}\" class=\"textField\" onclick=\"Edit(${idx})\">${param}</button>\n// <button id=\"BT_Delete\" data-idx=\"${idx}\" onClick={this.Delete(${ idx })}>DELETE</button>\n// <button onClick=${this.Delete()}> 삭제요~ </button> */}\n// ));\n// const { data } = this.props;\n// const list = data.map(\n//   info => (<PhoneInfo key={info.id} info={info} />)\n// );\n//   return (\n//     <div className=\"main\" >\n//       <p>To Do List</p>\n//       <input ref={(a) => this._inputElement = a} placeholder=\"할 일을 입력하세요\" />\n//       <button onClick={this.Post}> 추가요~ </button>\n//       {/* {JSON.stringify(this.state.itemArr)} */}\n//     </div>\n//   )\n// }","map":{"version":3,"sources":["/Users/andre/Desktop/git/react_todolist/src/App.js"],"names":["React","Component","List","App","constructor","props","Post","e","temp_string","_inputElement","value","tempArr","state","itemArr","push","key","Date","now","text","setState","preventDefault","console","log","render","literal","a"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAE1B;AACAG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,IAPmB,GAOXC,CAAD,IAAO;AACZ,UAAIC,WAAW,GAAG,KAAKC,aAAL,CAAmBC,KAArC;;AACA,UAAIF,WAAW,IAAI,EAAnB,EAAuB;AACrB,YAAIG,OAAO,GAAG,KAAKC,KAAL,CAAWC,OAAzB;AAEAF,QAAAA,OAAO,CAACG,IAAR,CACE;AACEC,UAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL,EADP;AAEEC,UAAAA,IAAI,EAAEV;AAFR,SADF,EAHqB,CAUrB;;AACA,aAAKC,aAAL,CAAmBC,KAAnB,GAA2B,EAA3B;AACA,aAAKS,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAEF;AAAX,SAAd;AAEAJ,QAAAA,CAAC,CAACa,cAAF;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAU,KAAKV,KAAL,CAAWC,OAAjC;AACD;AACF,KA1BkB;;AAEjB,SAAKD,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAuBDU,EAAAA,MAAM,GAAG;AAAE;AACT,QAAIC,OAAO,GAAG,EAAd;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,MAAA,GAAG,EAAGC,CAAD,IAAO,KAAKhB,aAAL,GAAqBgB,CAAxC;AAA2C,MAAA,WAAW,EAAC,oDAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,KAAKnB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,eAKE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA1CyB;;AA8C5B,eAAeV,GAAf,C,CAGE;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport List from './List.js';\n\nclass App extends Component {\n\n  // state와 하위 변수 생성\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemArr: []\n    }\n  }\n\n  Post = (e) => {\n    let temp_string = this._inputElement.value;\n    if (temp_string != \"\") {\n      let tempArr = this.state.itemArr;\n\n      tempArr.push(\n        {\n          key: Date.now(),\n          text: temp_string\n        }\n      );\n\n      //비워주기\n      this._inputElement.value = \"\";\n      this.setState({ itemArr: tempArr });\n\n      e.preventDefault();\n      console.log(\"Arr::\" + this.state.itemArr);\n    }\n  }\n\n  render() { //렌더 써주기 \n    let literal = \"\";\n    return (\n      <div className=\"main\" >\n        <p>To Do List</p>\n        <input ref={(a) => this._inputElement = a} placeholder=\"할 일을 입력하세요\" />\n        <button onClick={this.Post}> 추가요~ </button>\n        {/* 자식 컴퍼넌트에 데이터 넘겨주며 불러오기  */}\n        <List entries={this.state.itemArr} />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n\n\n  // Rearrange = function () {\n  //   let literal = \"\";\n\n  //   {\n  //     this.state.itemArr.map((item, idx) => {\n  //       literal += this.setLiteral(item, idx);\n  //     })\n  //   }\n\n  //   document.getElementById(\"DV_List\").innerHTML = literal;\n  // }\n\n  // Rearrange = function () {\n  //   render:\n  //   {\n  //     return (\n  //       <div>\n  //         Rearrange\n  //       </div>\n  //     )\n  //   }\n  // }\n\n\n\n\n  // setLiteral = function (param, idx) {\n  //   return `\n  //   <div id=\"DV_Thing\" data-idx=\"${idx}\">\n  //   <button id=\"BT_Thing\" data-idx=\"${idx}\" class=\"textField\" onclick=\"Edit(${idx})\">${param}</button>\n  //   <button id=\"BT_Delete\" data-idx=\"${idx}\" onClick={this.Delete(${idx})}>DELETE</button>\n  //   <button onClick=${this.Delete()}> 삭제요~ </button>\n  //   </div>\n  //   `\n  // }\n\n  // Delete = function (targetIdx) {\n  //   console.log(\"Delete\");\n  //   this.state.itemArr.splice(targetIdx, 1);\n  //   this.Rearrange();\n  // }\n\n  // inputUpdate = temp => {\n  // this.setState({ content: temp.target.value })\n  // }\n\n  // render() { //렌더 써주기 \n  //   let literal = \"\";\n  // this.state.itemArr.map((item, idx) => { literal += this.setLiteral(item, idx); });\n  // var bt = this.state.itemArr.map((item) => (\n  // <button value={item} />\n\n  // <div id=\"DV_Thing\" />\n  // <div id=\"DV_Thing\" data-idx={item} />\n  // {/* <button id=\"BT_Thing\" data-idx=\"${idx}\" class=\"textField\" onclick=\"Edit(${idx})\">${param}</button>\n  // <button id=\"BT_Delete\" data-idx=\"${idx}\" onClick={this.Delete(${ idx })}>DELETE</button>\n  // <button onClick=${this.Delete()}> 삭제요~ </button> */}\n\n\n\n\n  // ));\n  // const { data } = this.props;\n  // const list = data.map(\n  //   info => (<PhoneInfo key={info.id} info={info} />)\n  // );\n\n\n\n\n\n  //   return (\n  //     <div className=\"main\" >\n  //       <p>To Do List</p>\n  //       <input ref={(a) => this._inputElement = a} placeholder=\"할 일을 입력하세요\" />\n  //       <button onClick={this.Post}> 추가요~ </button>\n  //       {/* {JSON.stringify(this.state.itemArr)} */}\n  //     </div>\n  //   )\n  // }\n"]},"metadata":{},"sourceType":"module"}